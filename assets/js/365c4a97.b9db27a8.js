"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7250],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),f=r,g=u["".concat(l,".").concat(f)]||u[f]||c[f]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1061:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"configuration-adapter",title:"Configuration"},l=void 0,d={unversionedId:"contracts/adapters/configuration/configuration-adapter",id:"contracts/adapters/configuration/configuration-adapter",isDocsHomePage:!1,title:"Configuration",description:"The Configuration adapter manages proposals that update the DAO configs. These settings are usually used by different adapters and/or extensions.",source:"@site/docs/contracts/adapters/configuration/Configuration.md",sourceDirName:"contracts/adapters/configuration",slug:"/contracts/adapters/configuration/configuration-adapter",permalink:"/docs/contracts/adapters/configuration/configuration-adapter",editUrl:"https://github.com/openlawteam/tribute-contracts/edit/docs/website/docs/contracts/adapters/configuration/Configuration.md",tags:[],version:"current",frontMatter:{id:"configuration-adapter",title:"Configuration"},sidebar:"docs",previous:{title:"ERC1155",permalink:"/docs/contracts/extensions/erc1155-extension"},next:{title:"Managing",permalink:"/docs/contracts/adapters/configuration/managing-adapter"}},p=[{value:"Workflow",id:"workflow",children:[]},{value:"Access Flags",id:"access-flags",children:[{value:"DaoRegistry",id:"daoregistry",children:[]}]},{value:"Dependencies",id:"dependencies",children:[{value:"DaoRegistry",id:"daoregistry-1",children:[]},{value:"Voting",id:"voting",children:[]}]},{value:"Structs",id:"structs",children:[{value:"Configuration",id:"configuration",children:[]},{value:"DaoRegistry",id:"daoregistry-2",children:[]},{value:"Voting",id:"voting-1",children:[]}]},{value:"Storage",id:"storage",children:[{value:"_configurations",id:"_configurations",children:[]}]},{value:"Functions",id:"functions",children:[{value:"submitProposal",id:"submitproposal",children:[]},{value:"processProposal",id:"processproposal",children:[]}]},{value:"Events",id:"events",children:[]}],c={toc:p};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Configuration adapter manages proposals that update the DAO configs. These settings are usually used by different adapters and/or extensions."),(0,o.kt)("p",null,"The configs are defined as ",(0,o.kt)("inlineCode",{parentName:"p"},"Numeric")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Address")," types, and adapters/extension can read these settings from the DAO registry to take custom actions."),(0,o.kt)("p",null,"It is important to preserve these configs per DAO instance because if an adapter is replaced by a newer version, it is still possible to use that same config."),(0,o.kt)("p",null,"An example of that is the Onboarding adapter that uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"onboarding.tokenAddr")," configuration to get the token address that needs to be minted when a member joins the DAO."),(0,o.kt)("h2",{id:"workflow"},"Workflow"),(0,o.kt)("p",null,"Submit Proposal"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A member of the DAO submits a Configuration proposal with the configs array, the proposal gets sponsored and the data is stored in the adapter. After that the proposal is up for vote. If a non member attempt to submit a proposal it will revert the call."),(0,o.kt)("li",{parentName:"ul"},"Only the configType indicated in the config object will get updated. It is not possible to update an ",(0,o.kt)("inlineCode",{parentName:"li"},"address")," and a ",(0,o.kt)("inlineCode",{parentName:"li"},"numeric")," config with the same config record and name. In order to do that you need to create a new entry in the configs array and submit that proposal with the correct ",(0,o.kt)("inlineCode",{parentName:"li"},"configType"),".")),(0,o.kt)("p",null,"Process proposal"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the proposalId is valid and the vote passed, then the configs are applied to the DAO based on each config type: ",(0,o.kt)("inlineCode",{parentName:"li"},"address")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"numeric"),". In order to remove a config from the DAO, one just need to pass the value ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," for ",(0,o.kt)("inlineCode",{parentName:"li"},"numeric")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"0x0...")," (zero address) for the ",(0,o.kt)("inlineCode",{parentName:"li"},"address")," type.")),(0,o.kt)("h2",{id:"access-flags"},"Access Flags"),(0,o.kt)("h3",{id:"daoregistry"},"DaoRegistry"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SUBMIT_PROPOSAL")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SET_CONFIGURATION"))),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("h3",{id:"daoregistry-1"},"DaoRegistry"),(0,o.kt)("h3",{id:"voting"},"Voting"),(0,o.kt)("h2",{id:"structs"},"Structs"),(0,o.kt)("h3",{id:"configuration"},"Configuration"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"key"),": the sha3 of the name of the configuration."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"numericValue"),": the numeric value of the configuration if ",(0,o.kt)("inlineCode",{parentName:"li"},"configType=0"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"addressValue"),": the address value of the configuration if ",(0,o.kt)("inlineCode",{parentName:"li"},"configType=1"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"configType"),": the config type that will be updated: ",(0,o.kt)("inlineCode",{parentName:"li"},"0 = numeric"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"1 = address"),".")),(0,o.kt)("h3",{id:"daoregistry-2"},"DaoRegistry"),(0,o.kt)("h3",{id:"voting-1"},"Voting"),(0,o.kt)("h2",{id:"storage"},"Storage"),(0,o.kt)("h3",{id:"_configurations"},"_","configurations"),(0,o.kt)("p",null,"Map of all proposals with the configurations values applied or to be applied to the DAO."),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"submitproposal"},"submitProposal"),(0,o.kt)("p",null,"Creates and sponsors a new configuration proposal on behalf of the member calling the function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"  /**\n     * @notice Creates and sponsors a configuration proposal.\n     * @param dao The DAO Address.\n     * @param proposalId The proposal id.\n     * @param configs The keys, type, numeric and address config values.\n     * @param data Additional details about the financing proposal.\n     */\n    function submitProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        Configuration[] calldata configs,\n        bytes calldata data\n    ) external override reentrancyGuard(dao)\n\n")),(0,o.kt)("h3",{id:"processproposal"},"processProposal"),(0,o.kt)("p",null,"Processes a previously created configuration proposal by applying the configuration to the DAO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-solidity"},"  /**\n    * @notice Processing a configuration proposal to update the DAO state.\n    * @param dao The DAO Address.\n    * @param proposalId The proposal id.\n    */\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n        reentrancyGuard(dao)\n")),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"No events are emitted.")))}u.isMDXComponent=!0}}]);