"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1348],{3905:function(n,e,t){t.d(e,{Zo:function(){return l},kt:function(){return m}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var d=r.createContext({}),c=function(n){var e=r.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=c(n.components);return r.createElement(d.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,o=n.originalType,d=n.parentName,l=s(n,["components","mdxType","originalType","parentName"]),p=c(t),m=a,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return t?r.createElement(f,i(i({ref:e},l),{},{components:t})):r.createElement(f,i({ref:e},l))}));function m(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var d in e)hasOwnProperty.call(e,d)&&(s[d]=e[d]);s.originalType=n,s.mdxType="string"==typeof n?n:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5987:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],s={id:"manifest",title:"The Subgraph Manifest"},d=void 0,c={unversionedId:"subgraph/structure/manifest",id:"subgraph/structure/manifest",isDocsHomePage:!1,title:"The Subgraph Manifest",description:"Here is an example of the TributeDAO subgraph manifest. For more details on how to define a subgraph manifest check out The Graph documentation:",source:"@site/docs/subgraph/structure/Manifest.md",sourceDirName:"subgraph/structure",slug:"/subgraph/structure/manifest",permalink:"/docs/subgraph/structure/manifest",editUrl:"https://github.com/openlawteam/tribute-contracts/edit/docs/website/docs/subgraph/structure/Manifest.md",tags:[],version:"current",frontMatter:{id:"manifest",title:"The Subgraph Manifest"}},l=[],u={toc:l};function p(n){var e=n.components,t=(0,a.Z)(n,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Here is an example of the TributeDAO subgraph manifest. For more details on how to define a subgraph manifest check out ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://thegraph.com/docs/define-a-subgraph#the-subgraph-manifest"},"The Graph"))," documentation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'specVersion: 0.0.2\ndescription: Tribute DAO Framework Subgraph\nrepository: https://github.com/openlawteam/tribute-contracts\nschema:\n  file: ./schema.graphql\ndataSources:\n  # ====================================== DaoFactory ====================================\n  - kind: ethereum/contract\n    name: DaoFactory\n    network: mainnet\n    source:\n      address: "0x7f51bAf0159De2951aA0C48b55169aE4Deba89d6"\n      abi: DaoFactory\n      startBlock: 13\n    mapping:\n      kind: ethereum/events\n      apiVersion: 0.0.4\n      language: wasm/assemblyscript\n      entities:\n        - TributeDao\n      abis:\n        - name: DaoFactory\n          file: ../build/contracts/DaoFactory.json\n      eventHandlers:\n        - event: DAOCreated(address,string)\n          handler: handleDaoCreated\n      file: ./mappings/core/dao-factory-mapping.ts\n\ntemplates:\n  # ====================================== DaoRegistry ====================================\n  - kind: ethereum/contract\n    name: DaoRegistry\n    network: mainnet\n    source:\n      abi: DaoRegistry\n    mapping:\n      kind: ethereum/events\n      apiVersion: 0.0.4\n      language: wasm/assemblyscript\n      entities:\n        - Adapter\n        - Extension\n        - Proposal\n        - Member\n        - Vote\n      abis:\n        - name: DaoRegistry\n          file: ../build/contracts/DaoRegistry.json\n        - name: OnboardingContract\n          file: ../build/contracts/OnboardingContract.json\n        - name: DistributeContract\n          file: ../build/contracts/DistributeContract.json\n        - name: TributeContract\n          file: ../build/contracts/TributeContract.json\n        - name: TributeNFTContract\n          file: ../build/contracts/TributeNFTContract.json\n        - name: ManagingContract\n          file: ../build/contracts/ManagingContract.json\n        - name: GuildKickContract\n          file: ../build/contracts/GuildKickContract.json\n        - name: FinancingContract\n          file: ../build/contracts/FinancingContract.json\n        - name: OffchainVotingContract\n          file: ../build/contracts/OffchainVotingContract.json\n        - name: VotingContract\n          file: ../build/contracts/VotingContract.json\n        - name: IVoting\n          file: ../build/contracts/IVoting.json\n        - name: ERC20Extension\n          file: ../build/contracts/ERC20Extension.json\n      eventHandlers:\n        - event: SubmittedProposal(bytes32,uint256)\n          handler: handleSubmittedProposal\n        - event: SponsoredProposal(bytes32,uint256,address)\n          handler: handleSponsoredProposal\n        - event: ProcessedProposal(bytes32,uint256)\n          handler: handleProcessedProposal\n        - event: AdapterAdded(bytes32,address,uint256)\n          handler: handleAdapterAdded\n        - event: AdapterRemoved(bytes32)\n          handler: handleAdapterRemoved\n        - event: ExtensionAdded(bytes32,address)\n          handler: handleExtensionAdded\n        - event: ExtensionRemoved(bytes32)\n          handler: handleExtensionRemoved\n        - event: UpdateDelegateKey(address,address)\n          handler: handleUpdateDelegateKey\n        - event: ConfigurationUpdated(bytes32,uint256)\n          handler: handleConfigurationUpdated\n        - event: AddressConfigurationUpdated(bytes32,address)\n          handler: handleAddressConfigurationUpdated\n      file: ./mappings/core/dao-registry-mapping.ts\n  # ====================================== BankExtension ====================================\n  - kind: ethereum/contract\n    name: BankExtension\n    network: mainnet\n    source:\n      abi: BankExtension\n    mapping:\n      kind: ethereum/events\n      apiVersion: 0.0.4\n      language: wasm/assemblyscript\n      entities:\n        - TokenHolder\n        - Token\n        - Member\n      abis:\n        - name: BankExtension\n          file: ../build/contracts/BankExtension.json\n        - name: ERC20\n          file: ../build/contracts/ERC20.json\n        - name: ERC20Extension\n          file: ../build/contracts/ERC20Extension.json\n      eventHandlers:\n        - event: NewBalance(address,address,uint160)\n          handler: handleNewBalance\n        - event: Withdraw(address,address,uint160)\n          handler: handleWithdraw\n      file: ./mappings/extensions/bank-extension-mapping.ts\n  # ====================================== NFTExtension ====================================\n  - kind: ethereum/contract\n    name: NFTExtension\n    network: mainnet\n    source:\n      abi: NFTExtension\n    mapping:\n      kind: ethereum/events\n      apiVersion: 0.0.4\n      language: wasm/assemblyscript\n      entities:\n        - NFTCollection\n        - NFT\n      abis:\n        - name: NFTExtension\n          file: ../build/contracts/NFTExtension.json\n      eventHandlers:\n        - event: CollectedNFT(address,uint256)\n          handler: handleCollectedNFT\n        - event: TransferredNFT(address,uint256,address,address)\n          handler: handleTransferredNFT\n        - event: WithdrawnNFT(address,uint256,address)\n          handler: handleWithdrawnNFT\n      file: ./mappings/extensions/nft-extension-mapping.ts\n')))}p.isMDXComponent=!0}}]);